"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[254],{5254:n=>{n.exports="import {CommonModule} from '@angular/common';\nimport {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport {NotificationService} from '@ng-web-apis/notification';\nimport {isDenied, isGranted, PermissionsService} from '@ng-web-apis/permissions';\nimport {filter, map, switchMap, takeUntil, timer} from 'rxjs';\n\n@Component({\n    standalone: true,\n    selector: 'notification-page-example-3',\n    imports: [CommonModule],\n    templateUrl: './index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationPageExample3 {\n    private readonly notifications: NotificationService = inject(NotificationService);\n\n    readonly denied$ = inject(PermissionsService)\n        .state('notifications')\n        .pipe(map(isDenied));\n\n    sendNotification(): void {\n        this.notifications\n            .requestPermission()\n            .pipe(\n                filter(isGranted),\n                switchMap(() =>\n                    this.notifications.open('Close me, please!', {\n                        requireInteraction: true,\n                    }),\n                ),\n                takeUntil(timer(5_000)), // close stream after 5 seconds\n            )\n            .subscribe({\n                complete: () => console.info('Notification closed!'),\n            });\n    }\n}\n"}}]);