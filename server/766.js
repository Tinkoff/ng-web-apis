"use strict";var __defProp=Object.defineProperty,__name=(target,value)=>__defProp(target,"name",{value,configurable:!0});exports.id=766,exports.ids=[766],exports.modules={76385:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>ScreenOrientationPageComponent});var common=__webpack_require__(62141),core=__webpack_require__(47565),src=__webpack_require__(46070),cjs=__webpack_require__(11327);class ScreenOrientationService extends cjs.Observable{constructor(){super(subscriber=>this.stream$.subscribe(subscriber)),Object.defineProperty(this,"win",{enumerable:!0,configurable:!0,writable:!0,value:(0,core.inject)(src.jf)}),Object.defineProperty(this,"stream$",{enumerable:!0,configurable:!0,writable:!0,value:(this.isModern?(0,cjs.fromEvent)(this.win.screen.orientation,"change").pipe((0,cjs.startWith)(null),(0,cjs.map)(()=>this.win.screen.orientation.type)):(0,cjs.fromEvent)(this.win,"orientationchange").pipe((0,cjs.startWith)(null),(0,cjs.map)(()=>{switch(parseInt(this.win.orientation,10)){case 0:return"portrait-primary";case 180:return"portrait-secondary";case 90:return"landscape-primary";case-90:return"landscape-secondary"}}))).pipe((0,cjs.shareReplay)({bufferSize:1,refCount:!0}))})}get isModern(){var _a,_b;return!(null===(_b=null===(_a=this.win)||void 0===_a?void 0:_a.screen)||void 0===_b||!_b.orientation)}}__name(ScreenOrientationService,"ScreenOrientationService"),Object.defineProperty(ScreenOrientationService,"\u0275fac",{enumerable:!0,configurable:!0,writable:!0,value:core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:ScreenOrientationService,deps:[],target:core.\u0275\u0275FactoryTarget.Injectable})}),Object.defineProperty(ScreenOrientationService,"\u0275prov",{enumerable:!0,configurable:!0,writable:!0,value:core.\u0275\u0275ngDeclareInjectable({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:ScreenOrientationService,providedIn:"root"})}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:ScreenOrientationService,decorators:[{type:core.Injectable,args:[{providedIn:"root"}]}],ctorParameters:function(){return[]}});var ngx_highlightjs=__webpack_require__(67474);class ScreenOrientationPageComponent{constructor(){Object.defineProperty(this,"orientation$",{enumerable:!0,configurable:!0,writable:!0,value:(0,core.inject)(ScreenOrientationService)}),Object.defineProperty(this,"sample",{enumerable:!0,configurable:!0,writable:!0,value:"import {ScreenOrientationService} from '@ng-web-apis/screen-orientation';\n\n// ...\nexport class MyComponent {\n  constructor(readonly orientation$: ScreenOrientationService) {}\n}"}),Object.defineProperty(this,"sampleHtml",{enumerable:!0,configurable:!0,writable:!0,value:"<p>{{ orientation$ | async }}</p>"})}}__name(ScreenOrientationPageComponent,"ScreenOrientationPageComponent"),Object.defineProperty(ScreenOrientationPageComponent,"\u0275fac",{enumerable:!0,configurable:!0,writable:!0,value:core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:ScreenOrientationPageComponent,deps:[],target:core.\u0275\u0275FactoryTarget.Component})}),Object.defineProperty(ScreenOrientationPageComponent,"\u0275cmp",{enumerable:!0,configurable:!0,writable:!0,value:core.\u0275\u0275ngDeclareComponent({minVersion:"14.0.0",version:"15.2.10",type:ScreenOrientationPageComponent,isStandalone:!0,selector:"screen-orientation-page",ngImport:core,template:"<p>\n    <b>Current type:&nbsp;</b>\n    <code>{{ orientation$ | async }}</code>\n</p>\n\n<hr />\n<br />\n\n<h2>How to use</h2>\n\n<pre><code [highlight]=\"sample\"></code></pre>\n<pre><code [highlight]=\"sampleHtml\"></code></pre>\n\n<hr />\n\n<p>\n    <b>Landscape-primary</b>\n    is an orientation where the screen width is greater than the screen height. If the device's natural orientation is\n    landscape, then it is in landscape-primary when held in that position. If the device's natural orientation is\n    portrait, the user agent sets landscape-primary from the two options as shown in the screen orientation values\n    table.\n</p>\n<p>\n    <b>Landscape-secondary</b>\n    is an orientation where the screen width is greater than the screen height. If the device's natural orientation is\n    landscape, it is in landscape-secondary when rotated 180\xba from its natural orientation. If the device's natural\n    orientation is portrait, the user agent sets landscape-secondary from the two options as shown in the screen\n    orientation values table.\n</p>\n<p>\n    <b>Portrait-primary</b>\n    is an orientation where the screen width is less than or equal to the screen height. If the device's natural\n    orientation is portrait, then it is in portrait-primary when held in that position. If the device's natural\n    orientation is landscape, the user agent sets portrait-primary from the two options as shown in the screen\n    orientation values table.\n</p>\n<p>\n    <b>Portrait-secondary</b>\n    is an orientation where the screen width is less than or equal to the screen height. If the device's natural\n    orientation is portrait, then it is in portrait-secondary when rotated 180\xba from its natural position. If the\n    device's natural orientation is landscape, the user agent sets portrait-secondary from the two options as shown in\n    the screen orientation values table.\n</p>\n",styles:[":host{display:block;max-width:700px;margin:0 auto;line-height:1.5;font-size:1.1em}button{margin:0 auto;display:block}iframe{width:100%;height:20rem}\n"],dependencies:[{kind:"ngmodule",type:common.MD},{kind:"pipe",type:common.Jj,name:"async"},{kind:"ngmodule",type:ngx_highlightjs.fw},{kind:"directive",type:ngx_highlightjs.f4,selector:"[highlight]",inputs:["highlight","languages","lineNumbers"],outputs:["highlighted"]}],changeDetection:core.ChangeDetectionStrategy.OnPush})}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:ScreenOrientationPageComponent,decorators:[{type:core.Component,args:[{standalone:!0,selector:"screen-orientation-page",imports:[common.MD,ngx_highlightjs.fw],changeDetection:core.ChangeDetectionStrategy.OnPush,template:"<p>\n    <b>Current type:&nbsp;</b>\n    <code>{{ orientation$ | async }}</code>\n</p>\n\n<hr />\n<br />\n\n<h2>How to use</h2>\n\n<pre><code [highlight]=\"sample\"></code></pre>\n<pre><code [highlight]=\"sampleHtml\"></code></pre>\n\n<hr />\n\n<p>\n    <b>Landscape-primary</b>\n    is an orientation where the screen width is greater than the screen height. If the device's natural orientation is\n    landscape, then it is in landscape-primary when held in that position. If the device's natural orientation is\n    portrait, the user agent sets landscape-primary from the two options as shown in the screen orientation values\n    table.\n</p>\n<p>\n    <b>Landscape-secondary</b>\n    is an orientation where the screen width is greater than the screen height. If the device's natural orientation is\n    landscape, it is in landscape-secondary when rotated 180\xba from its natural orientation. If the device's natural\n    orientation is portrait, the user agent sets landscape-secondary from the two options as shown in the screen\n    orientation values table.\n</p>\n<p>\n    <b>Portrait-primary</b>\n    is an orientation where the screen width is less than or equal to the screen height. If the device's natural\n    orientation is portrait, then it is in portrait-primary when held in that position. If the device's natural\n    orientation is landscape, the user agent sets portrait-primary from the two options as shown in the screen\n    orientation values table.\n</p>\n<p>\n    <b>Portrait-secondary</b>\n    is an orientation where the screen width is less than or equal to the screen height. If the device's natural\n    orientation is portrait, then it is in portrait-secondary when rotated 180\xba from its natural position. If the\n    device's natural orientation is landscape, the user agent sets portrait-secondary from the two options as shown in\n    the screen orientation values table.\n</p>\n",styles:[":host{display:block;max-width:700px;margin:0 auto;line-height:1.5;font-size:1.1em}button{margin:0 auto;display:block}iframe{width:100%;height:20rem}\n"]}]}]})}};