"use strict";var __defProp=Object.defineProperty,__name=(target,value)=>__defProp(target,"name",{value,configurable:!0});exports.id=708,exports.ids=[708],exports.modules={87946:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>PermissionsPageComponent});var common=__webpack_require__(60636),core=__webpack_require__(70668),src=__webpack_require__(50684),permissions_src=__webpack_require__(46292),ngx_highlightjs=__webpack_require__(74648),cjs=__webpack_require__(73280);class PermissionsPageComponent{constructor(){Object.defineProperty(this,"navigator",{enumerable:!0,configurable:!0,writable:!0,value:(0,core.inject)(src.Qb)}),Object.defineProperty(this,"error$",{enumerable:!0,configurable:!0,writable:!0,value:new cjs.BehaviorSubject(null)}),Object.defineProperty(this,"basicSample",{enumerable:!0,configurable:!0,writable:!0,value:"import { PermissionsService } from '@ng-web-apis/permissions';\n\n@Component({\n  selector: 'main',\n  template: `\n    <h2>Geolocation state: {{ geolocationState$ | async }}</h2>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  geolocationState$ = this.permissionsService.state('geolocation');\n\n  constructor(\n    private readonly permissionsService: PermissionsService,\n  ) {}\n}\n"}),Object.defineProperty(this,"geolocationState$",{enumerable:!0,configurable:!0,writable:!0,value:(0,core.inject)(permissions_src.WU).state("geolocation").pipe((0,cjs.tap)(state=>{"prompt"===state&&(alert("After you acknowledge this message the browser will ask your permission to allow location access!"),this.navigator.geolocation.getCurrentPosition(()=>{}))}),(0,cjs.catchError)(error=>(this.error$.next(error.message),(0,cjs.of)(null))))})}}__name(PermissionsPageComponent,"PermissionsPageComponent"),Object.defineProperty(PermissionsPageComponent,"\u0275fac",{enumerable:!0,configurable:!0,writable:!0,value:core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:PermissionsPageComponent,deps:[],target:core.\u0275\u0275FactoryTarget.Component})}),Object.defineProperty(PermissionsPageComponent,"\u0275cmp",{enumerable:!0,configurable:!0,writable:!0,value:core.\u0275\u0275ngDeclareComponent({minVersion:"14.0.0",version:"15.2.10",type:PermissionsPageComponent,isStandalone:!0,selector:"permissions-page",ngImport:core,template:'The following example shows basic usage of\n<code>PermissionsService</code>\n:\n\n<pre><code [highlight]="basicSample"></code></pre>\n\n<div *ngIf="error$ | async as error">\n    Unfortunately we could not show what the code snippet above would render due to an error:\n    <br />\n    <b>{{ error }}</b>\n</div>\n\n<div *ngIf="geolocationState$ | async as geolocationState">\n    <p>The sample above would render the following:</p>\n\n    <hr />\n    <h2 class="align-center">Geolocation state: {{ geolocationState }}</h2>\n    <hr />\n\n    <p>Go ahead and change your browser Location permission as shown below to see this change reflected above.</p>\n\n    <div class="align-center">\n        <img\n            alt="Click on \'View site information\' icon next to the address bar and change selected permission for Location"\n            src="assets/change-permissions-instructions.jpg"\n        />\n    </div>\n</div>\n',styles:[":host{display:block;max-width:600px;margin:0 auto}\n"],dependencies:[{kind:"ngmodule",type:common.MD},{kind:"directive",type:common.u_,selector:"[ngIf]",inputs:["ngIf","ngIfThen","ngIfElse"]},{kind:"pipe",type:common.a,name:"async"},{kind:"ngmodule",type:ngx_highlightjs.M9},{kind:"directive",type:ngx_highlightjs.gl,selector:"[highlight]",inputs:["highlight","languages","lineNumbers"],outputs:["highlighted"]}],changeDetection:core.ChangeDetectionStrategy.OnPush})}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:PermissionsPageComponent,decorators:[{type:core.Component,args:[{standalone:!0,selector:"permissions-page",imports:[common.MD,ngx_highlightjs.M9],changeDetection:core.ChangeDetectionStrategy.OnPush,template:'The following example shows basic usage of\n<code>PermissionsService</code>\n:\n\n<pre><code [highlight]="basicSample"></code></pre>\n\n<div *ngIf="error$ | async as error">\n    Unfortunately we could not show what the code snippet above would render due to an error:\n    <br />\n    <b>{{ error }}</b>\n</div>\n\n<div *ngIf="geolocationState$ | async as geolocationState">\n    <p>The sample above would render the following:</p>\n\n    <hr />\n    <h2 class="align-center">Geolocation state: {{ geolocationState }}</h2>\n    <hr />\n\n    <p>Go ahead and change your browser Location permission as shown below to see this change reflected above.</p>\n\n    <div class="align-center">\n        <img\n            alt="Click on \'View site information\' icon next to the address bar and change selected permission for Location"\n            src="assets/change-permissions-instructions.jpg"\n        />\n    </div>\n</div>\n',styles:[":host{display:block;max-width:600px;margin:0 auto}\n"]}]}]})},46292:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{yS:()=>PERMISSIONS_SUPPORT,WU:()=>PermissionsService,iO:()=>isDenied,sl:()=>isGranted});var core=__webpack_require__(70668),cjs=__webpack_require__(73280),src=__webpack_require__(50684);const PERMISSIONS=new core.InjectionToken("[PERMISSIONS]: An abstraction over window.navigator.permissions object",{factory:()=>(0,core.inject)(src.Qb).permissions}),PERMISSIONS_SUPPORT=new core.InjectionToken("[PERMISSIONS_SUPPORT]: Is Permissions API supported?",{factory:()=>!!(0,core.inject)(PERMISSIONS)});class PermissionsService{constructor(permissions,permissionsSupported){Object.defineProperty(this,"permissions",{enumerable:!0,configurable:!0,writable:!0,value:permissions}),Object.defineProperty(this,"permissionsSupported",{enumerable:!0,configurable:!0,writable:!0,value:permissionsSupported})}state(nameOrDescriptor){const descriptor="string"==typeof nameOrDescriptor?{name:nameOrDescriptor}:nameOrDescriptor;return new cjs.Observable(subscriber=>{if(this.permissionsSupported)return(0,cjs.from)(this.permissions.query(descriptor)).pipe((0,cjs.switchMap)(status=>(0,cjs.fromEvent)(status,"change").pipe((0,cjs.startWith)(null),(0,cjs.map)(()=>status.state)))).subscribe(subscriber);subscriber.error("Permissions is not supported in your browser")}).pipe((0,cjs.shareReplay)({bufferSize:1,refCount:!0}))}}function isGranted(state){return"granted"===state}function isDenied(state){return"denied"===state}__name(PermissionsService,"PermissionsService"),Object.defineProperty(PermissionsService,"\u0275fac",{enumerable:!0,configurable:!0,writable:!0,value:core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:PermissionsService,deps:[{token:PERMISSIONS},{token:PERMISSIONS_SUPPORT}],target:core.\u0275\u0275FactoryTarget.Injectable})}),Object.defineProperty(PermissionsService,"\u0275prov",{enumerable:!0,configurable:!0,writable:!0,value:core.\u0275\u0275ngDeclareInjectable({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:PermissionsService,providedIn:"root"})}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"15.2.10",ngImport:core,type:PermissionsService,decorators:[{type:core.Injectable,args:[{providedIn:"root"}]}],ctorParameters:function(){return[{type:Permissions,decorators:[{type:core.Inject,args:[PERMISSIONS]}]},{type:void 0,decorators:[{type:core.Inject,args:[PERMISSIONS_SUPPORT]}]}]}}),__name(isGranted,"isGranted"),__name(isDenied,"isDenied"),__name(function isPrompt(state){return"prompt"===state||"default"===state},"isPrompt")}};