"use strict";var __defProp=Object.defineProperty,__name=(target,value)=>__defProp(target,"name",{value,configurable:!0});exports.id=431,exports.ids=[431],exports.modules={66431:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GeolocationPageModule:()=>GeolocationPageModule});var core=__webpack_require__(74788),cjs=__webpack_require__(72921);var src=__webpack_require__(96247),platform_browser=__webpack_require__(91211),common=__webpack_require__(12057);class MapComponent{constructor(domSanitizer){this.domSanitizer=domSanitizer,this.currentCoords=null,this.initialCoords=null,this.markerTransform$=new cjs.BehaviorSubject("translate(0px,0px)")}set coordinatesChange(coords){this.coordsToStyle(coords),this.currentCoords=coords}coordsToStyle(coordinates){if(!this.initialCoords)return void(this.initialCoords=coordinates);const style=`translate(${1e4*(this.initialCoords.longitude-coordinates.longitude)}px,${1e4*(this.initialCoords.latitude-coordinates.latitude)}px)`,safeStyle=this.domSanitizer.bypassSecurityTrustStyle(style);this.markerTransform$.next(safeStyle)}}__name(MapComponent,"MapComponent"),MapComponent.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:MapComponent,deps:[{token:platform_browser.H7}],target:core.\u0275\u0275FactoryTarget.Component}),MapComponent.\u0275cmp=core.\u0275\u0275ngDeclareComponent({minVersion:"12.0.0",version:"12.2.15",type:MapComponent,selector:"map",inputs:{coordinatesChange:"coordinatesChange"},ngImport:core,template:'<div class="map">\n    <div class="marker" [style.transform]="markerTransform$ | async">\n        <svg\n            id="Layer_1"\n            version="1.1"\n            xmlns="http://www.w3.org/2000/svg"\n            xmlns:xlink="http://www.w3.org/1999/xlink"\n            x="0px"\n            y="0px"\n            viewBox="0 0 365 560"\n            enable-background="new 0 0 365 560"\n            xml:space="preserve"\n        >\n            <g>\n                <path\n                    fill="#00AEEF"\n                    d="M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n\t\tC96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n\t\tc33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z"\n                />\n            </g>\n        </svg>\n    </div>\n    <div *ngIf="currentCoords" class="coords">\n        <div>long: {{ currentCoords.longitude }}</div>\n        <div>lat: {{ currentCoords.latitude }}</div>\n    </div>\n</div>\n',styles:[".map{min-width:300px;height:300px;overflow:hidden;background-color:#eceaea70;border:1px solid #7c7c7c}.marker{position:relative;top:50%;left:50%;width:20px;height:20px}.coords{position:absolute;font-family:monospace;width:max-content}\n"],directives:[{type:common.O5,selector:"[ngIf]",inputs:["ngIf","ngIfThen","ngIfElse"]}],pipes:{async:common.Ov},changeDetection:core.ChangeDetectionStrategy.OnPush}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:MapComponent,decorators:[{type:core.Component,args:[{selector:"map",templateUrl:"./map.component.html",styleUrls:["./map.component.less"],changeDetection:core.ChangeDetectionStrategy.OnPush}]}],ctorParameters:function(){return[{type:platform_browser.H7}]},propDecorators:{coordinatesChange:[{type:core.Input}]}});var ngx_highlightjs=__webpack_require__(53867);class GeolocationPageComponent{constructor(geolocation$,domSanitizer,changeDetectorRef){this.geolocation$=geolocation$,this.domSanitizer=domSanitizer,this.changeDetectorRef=changeDetectorRef,this.position=null,this.toggle=!1,this.currentPositionUrl=null,this.watchSubscription=null,this.error=null,this.sample="import {GeolocationService} from '@ng-web-apis/geolocation';\n\n// ...\n\nconstructor(private readonly geolocation$: GeolocationService) {}\n\ngetPosition() {\n  geolocation$.subscribe((position) => {\n     doSomethingWithPosition(position);\n  });\n}",this.sampleAsync='<app-component-using-position [position]="geolocation$ | async"></app-component-using-position>'}getCurrentPosition(){this.geolocation$.pipe((0,cjs.take)(1)).subscribe(position=>{this.currentPositionUrl=this.getUrl(position),this.changeDetectorRef.markForCheck()},error=>{this.error=error,this.changeDetectorRef.markForCheck()})}toggleWatch(){this.toggle=!this.toggle}getUrl(position){const longitude=position.coords.longitude,latitude=position.coords.latitude;return this.domSanitizer.bypassSecurityTrustResourceUrl(`//www.openstreetmap.org/export/embed.html?bbox=${longitude-.005},${latitude-.005},${longitude+.005},${latitude+.005}&marker=${position.coords.latitude},${position.coords.longitude}&layer=mapnik`)}}__name(GeolocationPageComponent,"GeolocationPageComponent"),GeolocationPageComponent.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationPageComponent,deps:[{token:src._1},{token:platform_browser.H7},{token:core.ChangeDetectorRef}],target:core.\u0275\u0275FactoryTarget.Component}),GeolocationPageComponent.\u0275cmp=core.\u0275\u0275ngDeclareComponent({minVersion:"12.0.0",version:"12.2.15",type:GeolocationPageComponent,selector:"geolocation-page",ngImport:core,template:'<div class="wrapper">\n    <section>\n        <p>\n            <strong>Angular</strong>\n            does not have any built-in instruments to use\n            <strong>Geolocation API</strong>\n            . This is an\n            <code>Observable</code>\n            based abstraction over\n            <strong>Geolocation API</strong>\n            to use with\n            <strong>Angular</strong>\n        </p>\n    </section>\n\n    <div *ngIf="!!error">\n        Sorry, position is not available: {{ error.message }}\n    </div>\n\n    <section>\n        <h2>How to use</h2>\n        <p>\n            Usage is pretty simple: just import service in your component and\n            subscribe to it. Service extends\n            <code>Observable</code>\n            and will emit the\n            <code>Position</code>\n            object.\n        </p>\n\n        <pre><code [highlight]="sample">\n            {{sample}}\n        </code></pre>\n\n        <p>You also can use async pipe</p>\n\n        <pre><code [highlight]="sampleAsync">\n            {{sampleAsync}}\n        </code></pre>\n\n        <div class="watch-position">\n            <div class="switch-container">\n                <label for="switcher" class="switch-container__text">\n                    Track my position\n                </label>\n                <label class="switch">\n                    <input\n                        id="switcher"\n                        type="checkbox"\n                        (click)="toggleWatch()"\n                    />\n                    <span class="slider round"></span>\n                </label>\n            </div>\n            <div *ngIf="!!toggle">\n                <div *ngIf="geolocation$ | async as geolocation">\n                    <map\n                        *ngIf="geolocation.coords"\n                        [coordinatesChange]="geolocation.coords"\n                    ></map>\n                </div>\n            </div>\n        </div>\n\n        <h2>Single position</h2>\n        <div class="current-position">\n            <p>\n                If you need to get position just once and stop observing user\n                location, you can subscribe to geolocation$ and use\n                <code>take(1)</code>\n                RxJs operator. Service is cold, meaning if there are no\n                Subscribers, it doesn\'t track position\n            </p>\n\n            <button class="primary-button" (click)="getCurrentPosition()">\n                Get my position!\n            </button>\n\n            <iframe\n                *ngIf="!!currentPositionUrl"\n                width="425"\n                height="350"\n                frameborder="0"\n                scrolling="no"\n                marginheight="0"\n                marginwidth="0"\n                [src]="currentPositionUrl"\n            ></iframe>\n        </div>\n    </section>\n</div>\n',components:[{type:MapComponent,selector:"map",inputs:["coordinatesChange"]}],directives:[{type:common.O5,selector:"[ngIf]",inputs:["ngIf","ngIfThen","ngIfElse"]},{type:ngx_highlightjs.y$,selector:"[highlight]",inputs:["highlight","languages","lineNumbers"],outputs:["highlighted"]}],pipes:{async:common.Ov},changeDetection:core.ChangeDetectionStrategy.OnPush}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationPageComponent,decorators:[{type:core.Component,args:[{selector:"geolocation-page",templateUrl:"./geolocation-page.component.html",changeDetection:core.ChangeDetectionStrategy.OnPush}]}],ctorParameters:function(){return[{type:src._1},{type:platform_browser.H7},{type:core.ChangeDetectorRef}]}});var router=__webpack_require__(3984);class GeolocationPageModule{}__name(GeolocationPageModule,"GeolocationPageModule"),GeolocationPageModule.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationPageModule,deps:[],target:core.\u0275\u0275FactoryTarget.NgModule}),GeolocationPageModule.\u0275mod=core.\u0275\u0275ngDeclareNgModule({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationPageModule,declarations:[GeolocationPageComponent,MapComponent],imports:[common.ez,ngx_highlightjs._l,router.Bz]}),GeolocationPageModule.\u0275inj=core.\u0275\u0275ngDeclareInjector({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationPageModule,providers:[{provide:src.H,useValue:{enableHighAccuracy:!0,timeout:3e3,maximumAge:1e3}}],imports:[[common.ez,ngx_highlightjs._l,router.Bz.forChild([{path:"",component:GeolocationPageComponent}])]]}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationPageModule,decorators:[{type:core.NgModule,args:[{imports:[common.ez,ngx_highlightjs._l,router.Bz.forChild([{path:"",component:GeolocationPageComponent}])],declarations:[GeolocationPageComponent,MapComponent],providers:[{provide:src.H,useValue:{enableHighAccuracy:!0,timeout:3e3,maximumAge:1e3}}]}]}]})},96247:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{RN:()=>GEOLOCATION_SUPPORT,_1:()=>GeolocationService,H:()=>POSITION_OPTIONS});var core=__webpack_require__(74788),cjs=__webpack_require__(72921),operators=__webpack_require__(57192),src=__webpack_require__(92176);const GEOLOCATION=new core.InjectionToken("An abstraction over window.navigator.geolocation object",{factory:()=>(0,core.inject)(src.s5).geolocation}),POSITION_OPTIONS=new core.InjectionToken("Token for an additional position options",{factory:()=>({})}),GEOLOCATION_SUPPORT=new core.InjectionToken("Is Geolocation API supported?",{factory:()=>!!(0,core.inject)(GEOLOCATION)});class GeolocationService extends cjs.Observable{constructor(geolocationRef,geolocationSupported,positionOptions){let watchPositionId=0;return super(subscriber=>{geolocationSupported||subscriber.error("Geolocation is not supported in your browser"),watchPositionId=geolocationRef.watchPosition(position=>subscriber.next(position),positionError=>subscriber.error(positionError),positionOptions)}),this.pipe((0,operators.xS)(()=>geolocationRef.clearWatch(watchPositionId)),(0,operators.d)({bufferSize:1,refCount:!0}))}}__name(GeolocationService,"GeolocationService"),GeolocationService.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationService,deps:[{token:GEOLOCATION},{token:GEOLOCATION_SUPPORT},{token:POSITION_OPTIONS}],target:core.\u0275\u0275FactoryTarget.Injectable}),GeolocationService.\u0275prov=core.\u0275\u0275ngDeclareInjectable({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationService,providedIn:"root"}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GeolocationService,decorators:[{type:core.Injectable,args:[{providedIn:"root"}]}],ctorParameters:function(){return[{type:Geolocation,decorators:[{type:core.Inject,args:[GEOLOCATION]}]},{type:void 0,decorators:[{type:core.Inject,args:[GEOLOCATION_SUPPORT]}]},{type:void 0,decorators:[{type:core.Inject,args:[POSITION_OPTIONS]}]}]}})}};