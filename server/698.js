"use strict";var __defProp=Object.defineProperty,__name=(target,value)=>__defProp(target,"name",{value,configurable:!0});exports.id=698,exports.ids=[698],exports.modules={63698:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CanvasPageModule:()=>CanvasPageModule});var core=__webpack_require__(74788),taiga_ui_core_components_label=__webpack_require__(19506),taiga_ui_core_components_expand=__webpack_require__(12733),taiga_ui_core_directives_textfield_controller=__webpack_require__(441),taiga_ui_core_components_data_list=__webpack_require__(75111),taiga_ui_kit_components_slider=__webpack_require__(18106),taiga_ui_kit_components_select=__webpack_require__(99485),taiga_ui_kit_components_data_list_wrapper=__webpack_require__(4246),taiga_ui_kit_components_input_files=__webpack_require__(3977),taiga_ui_kit_components_input=__webpack_require__(21673),taiga_ui_addon_editor_components_input_color=__webpack_require__(44385),fesm2015_forms=__webpack_require__(24751),src=__webpack_require__(92176);const CANVAS_2D_CONTEXT=new core.InjectionToken("Canvas 2D rendering context"),CANVAS_PROPERTIES=new core.InjectionToken("A directive performing processing before and after drawing to canvas",{factory:()=>[]});function asCanvasProperty(useExisting){return{provide:CANVAS_PROPERTIES,multi:!0,useExisting}}__name(asCanvasProperty,"asCanvasProperty");var cjs=__webpack_require__(72921);class DrawService{constructor(parent,properties,context,animationFrame$,ngZone){this.call=()=>{},this.subscription=ngZone.runOutsideAngular(()=>animationFrame$.subscribe(()=>{context.save(),parent.forEach(property=>property.call(context)),properties.forEach(property=>property.call(context)),this.call(context),context.restore()}))}ngOnDestroy(){this.subscription.unsubscribe()}}function canvasContextFactory({nativeElement},opaque=nativeElement.getAttribute("waOpaque"),desynchronized=nativeElement.getAttribute("waDesynchronized")){const context=nativeElement.getContext("2d",{alpha:null===opaque,desynchronized:null!==desynchronized});if(!context)throw new Error("Context of different type was already requested");return context}__name(DrawService,"DrawService"),DrawService.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:DrawService,deps:[{token:CANVAS_PROPERTIES,skipSelf:!0},{token:CANVAS_PROPERTIES},{token:CANVAS_2D_CONTEXT},{token:src.L1},{token:core.NgZone}],target:core.\u0275\u0275FactoryTarget.Injectable}),DrawService.\u0275prov=core.\u0275\u0275ngDeclareInjectable({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:DrawService}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:DrawService,decorators:[{type:core.Injectable}],ctorParameters:function(){return[{type:void 0,decorators:[{type:core.SkipSelf},{type:core.Inject,args:[CANVAS_PROPERTIES]}]},{type:void 0,decorators:[{type:core.Inject,args:[CANVAS_PROPERTIES]}]},{type:CanvasRenderingContext2D,decorators:[{type:core.Inject,args:[CANVAS_2D_CONTEXT]}]},{type:cjs.Observable,decorators:[{type:core.Inject,args:[src.L1]}]},{type:core.NgZone,decorators:[{type:core.Inject,args:[core.NgZone]}]}]}}),__name(canvasContextFactory,"canvasContextFactory");class Canvas2dDirective{constructor(context,method,_opaque,_desynchronized){context.strokeStyle="transparent",method.call=context2=>{context2.clearRect(0,0,context2.canvas.width,context2.canvas.height)}}}__name(Canvas2dDirective,"Canvas2dDirective"),Canvas2dDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:Canvas2dDirective,deps:[{token:CANVAS_2D_CONTEXT},{token:DrawService},{token:"opaque",attribute:!0},{token:"desynchronized",attribute:!0}],target:core.\u0275\u0275FactoryTarget.Directive}),Canvas2dDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:Canvas2dDirective,selector:"canvas[waCanvas2d]",providers:[{provide:CANVAS_2D_CONTEXT,deps:[core.ElementRef],useFactory:canvasContextFactory},DrawService],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:Canvas2dDirective,decorators:[{type:core.Directive,args:[{selector:"canvas[waCanvas2d]",providers:[{provide:CANVAS_2D_CONTEXT,deps:[core.ElementRef],useFactory:canvasContextFactory},DrawService]}]}],ctorParameters:function(){return[{type:CanvasRenderingContext2D,decorators:[{type:core.Inject,args:[CANVAS_2D_CONTEXT]}]},{type:void 0,decorators:[{type:core.Inject,args:[DrawService]}]},{type:void 0,decorators:[{type:core.Attribute,args:["opaque"]}]},{type:void 0,decorators:[{type:core.Attribute,args:["desynchronized"]}]}]}});class DrawImageDirective{constructor(method){this.dX=0,this.dY=0,method.call=context=>{!this.image||(void 0!==this.sWidth&&void 0!==this.sHeight&&void 0!==this.sX&&void 0!==this.sY&&void 0!==this.dWidth&&void 0!==this.dHeight?context.drawImage(this.image,this.sX,this.sY,this.sWidth,this.sHeight,this.dX,this.dY,this.dWidth,this.dHeight):void 0!==this.dWidth&&void 0!==this.dHeight?context.drawImage(this.image,this.dX,this.dY,this.dWidth,this.dHeight):context.drawImage(this.image,this.dX,this.dY))}}}__name(DrawImageDirective,"DrawImageDirective"),DrawImageDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:DrawImageDirective,deps:[{token:DrawService}],target:core.\u0275\u0275FactoryTarget.Directive}),DrawImageDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:DrawImageDirective,selector:"canvas-draw-image",inputs:{image:"image",dX:"dX",dY:"dY",dWidth:"dWidth",dHeight:"dHeight",sX:"sX",sY:"sY",sWidth:"sWidth",sHeight:"sHeight"},providers:[DrawService],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:DrawImageDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-draw-image",providers:[DrawService]}]}],ctorParameters:function(){return[{type:void 0,decorators:[{type:core.Inject,args:[DrawService]}]}]},propDecorators:{image:[{type:core.Input}],dX:[{type:core.Input}],dY:[{type:core.Input}],dWidth:[{type:core.Input}],dHeight:[{type:core.Input}],sX:[{type:core.Input}],sY:[{type:core.Input}],sWidth:[{type:core.Input}],sHeight:[{type:core.Input}]}});const CANVAS_METHOD=new core.InjectionToken("A directive that draws on canvas");function asCanvasMethod(useExisting){return{provide:CANVAS_METHOD,useExisting}}__name(asCanvasMethod,"asCanvasMethod");class PathDirective{constructor(method){this.closed=!1,this.pathSteps=new core.QueryList,method.call=context=>{context.beginPath(),this.pathSteps.forEach(step=>{step.call(context)}),this.closed&&context.closePath(),context.stroke(),context.fill(this.fillRule)}}}__name(PathDirective,"PathDirective"),PathDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PathDirective,deps:[{token:DrawService}],target:core.\u0275\u0275FactoryTarget.Directive}),PathDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:PathDirective,selector:"canvas-path:not([path])",inputs:{closed:"closed",fillRule:"fillRule"},providers:[DrawService],queries:[{propertyName:"pathSteps",predicate:CANVAS_METHOD}],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PathDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-path:not([path])",providers:[DrawService]}]}],ctorParameters:function(){return[{type:void 0,decorators:[{type:core.Inject,args:[DrawService]}]}]},propDecorators:{closed:[{type:core.Input}],fillRule:[{type:core.Input}],pathSteps:[{type:core.ContentChildren,args:[CANVAS_METHOD]}]}});class FillStrokeStylesDirective{constructor(){this.fillStyle="black",this.strokeStyle="transparent"}call(context){context.fillStyle=this.fillStyle,context.strokeStyle=this.strokeStyle}}__name(FillStrokeStylesDirective,"FillStrokeStylesDirective"),FillStrokeStylesDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:FillStrokeStylesDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),FillStrokeStylesDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:FillStrokeStylesDirective,selector:"canvas-path[fillStyle],canvas-path[strokeStyle],canvas-text[fillStyle],canvas-text[strokeStyle]",inputs:{fillStyle:"fillStyle",strokeStyle:"strokeStyle"},providers:[asCanvasProperty(FillStrokeStylesDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:FillStrokeStylesDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-path[fillStyle],canvas-path[strokeStyle],canvas-text[fillStyle],canvas-text[strokeStyle]",providers:[asCanvasProperty(FillStrokeStylesDirective)]}]}],propDecorators:{fillStyle:[{type:core.Input}],strokeStyle:[{type:core.Input}]}});class RectDirective{constructor(){this.x=0,this.y=0,this.width=0,this.height=0}call(context){context.rect(this.x,this.y,this.width,this.height)}}__name(RectDirective,"RectDirective"),RectDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:RectDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),RectDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:RectDirective,selector:"canvas-rect",inputs:{x:"x",y:"y",width:"width",height:"height"},providers:[asCanvasMethod(RectDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:RectDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-rect",providers:[asCanvasMethod(RectDirective)]}]}],propDecorators:{x:[{type:core.Input}],y:[{type:core.Input}],width:[{type:core.Input}],height:[{type:core.Input}]}});class CompositingDirective{constructor(){this.globalAlpha=1,this.globalCompositeOperation="source-over"}call(context){context.globalAlpha=this.globalAlpha,context.globalCompositeOperation=this.globalCompositeOperation}}__name(CompositingDirective,"CompositingDirective"),CompositingDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CompositingDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),CompositingDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:CompositingDirective,selector:"canvas-draw-image[globalAlpha],canvas-draw-image[globalCompositeOperation],canvas-path[globalAlpha],canvas-path[globalCompositeOperation],canvas-text[globalAlpha],canvas-text[globalCompositeOperation]",inputs:{globalAlpha:"globalAlpha",globalCompositeOperation:"globalCompositeOperation"},providers:[asCanvasProperty(CompositingDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CompositingDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-draw-image[globalAlpha],canvas-draw-image[globalCompositeOperation],canvas-path[globalAlpha],canvas-path[globalCompositeOperation],canvas-text[globalAlpha],canvas-text[globalCompositeOperation]",providers:[asCanvasProperty(CompositingDirective)]}]}],propDecorators:{globalAlpha:[{type:core.Input}],globalCompositeOperation:[{type:core.Input}]}});class TransformDirective{constructor(parent){this.parent=parent,this.transform=new DOMMatrix}call(context){var _a;context.setTransform((null===(_a=this.parent)||void 0===_a?void 0:_a.transform.multiply(this.transform))||this.transform)}}__name(TransformDirective,"TransformDirective"),TransformDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TransformDirective,deps:[{token:TransformDirective,optional:!0,skipSelf:!0}],target:core.\u0275\u0275FactoryTarget.Directive}),TransformDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:TransformDirective,selector:"canvas[transform],canvas-draw-image[transform],canvas-path[transform],canvas-text[transform]",inputs:{transform:"transform"},providers:[asCanvasProperty(TransformDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TransformDirective,decorators:[{type:core.Directive,args:[{selector:"canvas[transform],canvas-draw-image[transform],canvas-path[transform],canvas-text[transform]",providers:[asCanvasProperty(TransformDirective)]}]}],ctorParameters:function(){return[{type:TransformDirective,decorators:[{type:core.Optional},{type:core.SkipSelf}]}]},propDecorators:{transform:[{type:core.Input}]}});class ShadowStylesDirective{constructor(){this.shadowBlur=0,this.shadowColor="transparent",this.shadowOffsetX=0,this.shadowOffsetY=0}call(context){context.shadowBlur=this.shadowBlur,context.shadowColor=this.shadowColor,context.shadowOffsetX=this.shadowOffsetX,context.shadowOffsetY=this.shadowOffsetY}}__name(ShadowStylesDirective,"ShadowStylesDirective"),ShadowStylesDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ShadowStylesDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),ShadowStylesDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:ShadowStylesDirective,selector:"canvas-draw-image[shadowBlur],canvas-draw-image[shadowColor],canvas-draw-image[shadowOffsetX],canvas-draw-image[shadowOffsetY],canvas-path[shadowBlur],canvas-path[shadowColor],canvas-path[shadowOffsetX],canvas-path[shadowOffsetY],canvas-text[shadowBlur],canvas-text[shadowColor],canvas-text[shadowOffsetX],canvas-text[shadowOffsetY]",inputs:{shadowBlur:"shadowBlur",shadowColor:"shadowColor",shadowOffsetX:"shadowOffsetX",shadowOffsetY:"shadowOffsetY"},providers:[asCanvasProperty(ShadowStylesDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ShadowStylesDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-draw-image[shadowBlur],canvas-draw-image[shadowColor],canvas-draw-image[shadowOffsetX],canvas-draw-image[shadowOffsetY],canvas-path[shadowBlur],canvas-path[shadowColor],canvas-path[shadowOffsetX],canvas-path[shadowOffsetY],canvas-text[shadowBlur],canvas-text[shadowColor],canvas-text[shadowOffsetX],canvas-text[shadowOffsetY]",providers:[asCanvasProperty(ShadowStylesDirective)]}]}],propDecorators:{shadowBlur:[{type:core.Input}],shadowColor:[{type:core.Input}],shadowOffsetX:[{type:core.Input}],shadowOffsetY:[{type:core.Input}]}});class ArcDirective{constructor(){this.x=0,this.y=0,this.radius=0,this.startAngle=0,this.endAngle=0,this.anticlockwise=!1}call(context){context.arc(this.x,this.y,this.radius,this.startAngle,this.endAngle,this.anticlockwise)}}__name(ArcDirective,"ArcDirective"),ArcDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ArcDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),ArcDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:ArcDirective,selector:"canvas-arc",inputs:{x:"x",y:"y",radius:"radius",startAngle:"startAngle",endAngle:"endAngle",anticlockwise:"anticlockwise"},providers:[asCanvasMethod(ArcDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ArcDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-arc",providers:[asCanvasMethod(ArcDirective)]}]}],propDecorators:{x:[{type:core.Input}],y:[{type:core.Input}],radius:[{type:core.Input}],startAngle:[{type:core.Input}],endAngle:[{type:core.Input}],anticlockwise:[{type:core.Input}]}});class LineToDirective{constructor(){this.x=0,this.y=0}call(context){context.lineTo(this.x,this.y)}}__name(LineToDirective,"LineToDirective"),LineToDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:LineToDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),LineToDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:LineToDirective,selector:"canvas-line-to",inputs:{x:"x",y:"y"},providers:[asCanvasMethod(LineToDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:LineToDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-line-to",providers:[asCanvasMethod(LineToDirective)]}]}],propDecorators:{x:[{type:core.Input}],y:[{type:core.Input}]}});class TextDirective{constructor(method){this.text="",this.x=0,this.y=0,method.call=context=>{context.fillText(this.text,this.x,this.y,this.maxWidth),context.strokeText(this.text,this.x,this.y,this.maxWidth)}}}__name(TextDirective,"TextDirective"),TextDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TextDirective,deps:[{token:DrawService}],target:core.\u0275\u0275FactoryTarget.Directive}),TextDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:TextDirective,selector:"canvas-text",inputs:{text:"text",x:"x",y:"y",maxWidth:"maxWidth"},providers:[DrawService],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TextDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-text",providers:[DrawService]}]}],ctorParameters:function(){return[{type:void 0,decorators:[{type:core.Inject,args:[DrawService]}]}]},propDecorators:{text:[{type:core.Input}],x:[{type:core.Input}],y:[{type:core.Input}],maxWidth:[{type:core.Input}]}});class TextDrawingStylesDirective{constructor(){this.direction="inherit",this.font="10px sans-serif",this.textAlign="start",this.textBaseline="alphabetic"}call(context){context.direction=this.direction,context.font=this.font,context.textAlign=this.textAlign,context.textBaseline=this.textBaseline}}__name(TextDrawingStylesDirective,"TextDrawingStylesDirective"),TextDrawingStylesDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TextDrawingStylesDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),TextDrawingStylesDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:TextDrawingStylesDirective,selector:"canvas-text[direction],canvas-text[font],canvas-text[textAlign],canvas-text[textBaseline]",inputs:{direction:"direction",font:"font",textAlign:"textAlign",textBaseline:"textBaseline"},providers:[asCanvasProperty(TextDrawingStylesDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TextDrawingStylesDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-text[direction],canvas-text[font],canvas-text[textAlign],canvas-text[textBaseline]",providers:[asCanvasProperty(TextDrawingStylesDirective)]}]}],propDecorators:{direction:[{type:core.Input}],font:[{type:core.Input}],textAlign:[{type:core.Input}],textBaseline:[{type:core.Input}]}});class TransformPipe{transform(value){return new DOMMatrix(value)}}__name(TransformPipe,"TransformPipe"),TransformPipe.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TransformPipe,deps:[],target:core.\u0275\u0275FactoryTarget.Pipe}),TransformPipe.\u0275pipe=core.\u0275\u0275ngDeclarePipe({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TransformPipe,name:"transform"}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:TransformPipe,decorators:[{type:core.Pipe,args:[{name:"transform"}]}]});class RadPipe{transform(input){return input*Math.PI/180}}__name(RadPipe,"RadPipe"),RadPipe.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:RadPipe,deps:[],target:core.\u0275\u0275FactoryTarget.Pipe}),RadPipe.\u0275pipe=core.\u0275\u0275ngDeclarePipe({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:RadPipe,name:"rad"}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:RadPipe,decorators:[{type:core.Pipe,args:[{name:"rad"}]}]});class CanvasPageComponent{constructor(){this.x1=20,this.y1=20,this.w1=100,this.h1=50,this.x2=50,this.y2=50,this.w2=100,this.h2=50,this.c2="#00ff00",this.dX=0,this.dY=0,this.dWidth=100,this.dHeight=100,this.globalCompositeOperation="source-over",this.mouth=30,this.blur=0,this.offset=0,this.font='bold 40px "Lucida Bright"',this.text="PAC-MAN",this.color="#ffa500",this.file=null,this.image=new Image,this.items=["source-over","multiply","screen"],this.image.onload=()=>{URL.revokeObjectURL(this.image.src)}}onFile(file){this.file=file,file&&(this.image.src=URL.createObjectURL(file))}}__name(CanvasPageComponent,"CanvasPageComponent"),CanvasPageComponent.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasPageComponent,deps:[],target:core.\u0275\u0275FactoryTarget.Component}),CanvasPageComponent.\u0275cmp=core.\u0275\u0275ngDeclareComponent({minVersion:"12.0.0",version:"12.2.15",type:CanvasPageComponent,selector:"audio-page",ngImport:core,template:'<h2>Basic example</h2>\n<section>\n    <fieldset>\n        <label tuiLabel="x" class="child">\n            <input tuiSlider type="range" min="0" max="300" [(ngModel)]="x1" />\n        </label>\n        <label tuiLabel="y" class="child">\n            <input tuiSlider type="range" min="0" max="150" [(ngModel)]="y1" />\n        </label>\n        <label tuiLabel="width" class="child">\n            <input tuiSlider type="range" min="0" max="300" [(ngModel)]="w1" />\n        </label>\n        <label tuiLabel="height" class="child">\n            <input tuiSlider type="range" min="0" max="150" [(ngModel)]="h1" />\n        </label>\n    </fieldset>\n\n    <fieldset>\n        <label tuiLabel="x" class="child">\n            <input tuiSlider type="range" min="0" max="300" [(ngModel)]="x2" />\n        </label>\n        <label tuiLabel="y" class="child">\n            <input tuiSlider type="range" min="0" max="150" [(ngModel)]="y2" />\n        </label>\n        <label tuiLabel="width" class="child">\n            <input tuiSlider type="range" min="0" max="300" [(ngModel)]="w2" />\n        </label>\n        <label tuiLabel="height" class="child">\n            <input tuiSlider type="range" min="0" max="150" [(ngModel)]="h2" />\n        </label>\n        <div class="row">\n            <tui-select\n                tuiTextfieldSize="m"\n                class="child"\n                [(ngModel)]="globalCompositeOperation"\n            >\n                Overlay\n                <tui-data-list-wrapper\n                    *tuiDataList\n                    [items]="items"\n                ></tui-data-list-wrapper>\n            </tui-select>\n            <tui-input-color\n                tuiTextfieldSize="m"\n                class="child"\n                [(ngModel)]="c2"\n            >\n                Color\n            </tui-input-color>\n        </div>\n    </fieldset>\n\n    <fieldset>\n        <tui-input-files\n            class="child"\n            [ngModel]="file"\n            (ngModelChange)="onFile($event)"\n        >\n            <input tuiInputFiles accept="image/*" />\n        </tui-input-files>\n\n        <tui-expand class="child" [expanded]="!!file">\n            <div class="controls">\n                <label tuiLabel="dX">\n                    <input\n                        tuiSlider\n                        type="range"\n                        min="0"\n                        max="300"\n                        [(ngModel)]="dX"\n                    />\n                </label>\n\n                <label tuiLabel="dY">\n                    <input\n                        tuiSlider\n                        type="range"\n                        min="0"\n                        max="150"\n                        [(ngModel)]="dY"\n                    />\n                </label>\n\n                <label tuiLabel="dWidth">\n                    <input\n                        tuiSlider\n                        type="range"\n                        min="0"\n                        max="300"\n                        [(ngModel)]="dWidth"\n                    />\n                </label>\n\n                <label tuiLabel="dHeight">\n                    <input\n                        tuiSlider\n                        type="range"\n                        min="0"\n                        max="150"\n                        [(ngModel)]="dHeight"\n                    />\n                </label>\n            </div>\n        </tui-expand>\n    </fieldset>\n</section>\n\n<canvas waCanvas2d>\n    <canvas-draw-image\n        [image]="image"\n        [dX]="dX"\n        [dY]="dY"\n        [dWidth]="dWidth"\n        [dHeight]="dHeight"\n    ></canvas-draw-image>\n    <canvas-path fillStyle="#f00">\n        <canvas-rect [x]="x1" [y]="y1" [width]="w1" [height]="h1"></canvas-rect>\n    </canvas-path>\n    <canvas-path\n        [fillStyle]="c2"\n        [globalCompositeOperation]="globalCompositeOperation"\n    >\n        <canvas-rect [x]="x2" [y]="y2" [width]="w2" [height]="h2"></canvas-rect>\n    </canvas-path>\n</canvas>\n<h2>Path example</h2>\n\n<section>\n    <fieldset>\n        <label tuiLabel="Pac-Man mouth" class="child">\n            <input\n                tuiSlider\n                type="range"\n                min="0.01"\n                max="45"\n                [(ngModel)]="mouth"\n            />\n        </label>\n        <label tuiLabel="Pac-Man shadow blur" class="child">\n            <input tuiSlider type="range" min="0" max="10" [(ngModel)]="blur" />\n        </label>\n        <label tuiLabel="Pac-Man shadow distance" class="child">\n            <input\n                tuiSlider\n                type="range"\n                min="0"\n                max="10"\n                [(ngModel)]="offset"\n            />\n        </label>\n    </fieldset>\n    <fieldset>\n        <tui-input tuiTextfieldSize="m" class="child" [(ngModel)]="text">\n            Text\n        </tui-input>\n        <tui-input tuiTextfieldSize="m" class="child" [(ngModel)]="font">\n            Font\n        </tui-input>\n        <tui-input-color tuiTextfieldSize="m" class="child" [(ngModel)]="color">\n            color\n        </tui-input-color>\n    </fieldset>\n</section>\n<canvas\n    waCanvas2d\n    [width]="600"\n    [height]="300"\n    [transform]="\'scale(2, 2)\' | transform"\n>\n    <canvas-path\n        fillStyle="gold"\n        shadowColor="grey"\n        [shadowBlur]="blur"\n        [shadowOffsetY]="offset"\n    >\n        <canvas-arc\n            [x]="50"\n            [y]="75"\n            [radius]="30"\n            [startAngle]="mouth | rad"\n            [endAngle]="-mouth | rad"\n        ></canvas-arc>\n        <canvas-line-to [x]="50" [y]="75"></canvas-line-to>\n    </canvas-path>\n    <canvas-text\n        [fillStyle]="color"\n        [maxWidth]="200"\n        [text]="text"\n        [font]="font"\n        [x]="90"\n        [y]="90"\n    ></canvas-text>\n</canvas>\n',styles:[":host{display:block;max-width:800px;margin:0 auto}.row{display:flex;min-width:100%;grid-gap:12px;gap:12px}.child{flex:1;min-width:100px}.controls{display:flex;flex-direction:column;grid-gap:12px;gap:12px}input{margin:0}fieldset{display:flex;flex-wrap:wrap;border:none;background:whitesmoke;padding:12px;margin:12px 0;grid-gap:12px;gap:12px;border-radius:1.25rem}canvas{display:block;width:300px;height:150px;margin:0 auto 40px;border-radius:6px;box-shadow:0 12px 36px #0003}\n"],components:[{type:taiga_ui_core_components_label.A,selector:"label[tuiLabel]",inputs:["tuiLabel","context"]},{type:taiga_ui_kit_components_slider.iN,selector:"input[type=range][tuiSlider]",inputs:["size","segments"]},{type:taiga_ui_kit_components_select.uJ,selector:"tui-select",inputs:["stringify","identityMatcher","valueContent"]},{type:taiga_ui_kit_components_data_list_wrapper.eC,selector:"tui-data-list-wrapper:not([labels])",inputs:["items"]},{type:taiga_ui_addon_editor_components_input_color.j,selector:"tui-input-color",inputs:["colors"]},{type:taiga_ui_kit_components_input_files.Nf,selector:"tui-input-files",inputs:["link","label","accept","multiple","size","maxFileSize"],outputs:["reject"]},{type:taiga_ui_core_components_expand.SV,selector:"tui-expand",inputs:["async","expanded"]},{type:taiga_ui_kit_components_input.K3,selector:"tui-input"}],directives:[{type:fesm2015_forms.eT,selector:"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]"},{type:fesm2015_forms.Fj,selector:"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]"},{type:fesm2015_forms.JJ,selector:"[formControlName],[ngModel],[formControl]"},{type:fesm2015_forms.On,selector:"[ngModel]:not([formControlName]):not([formControl])",inputs:["name","disabled","ngModel","ngModelOptions"],outputs:["ngModelChange"],exportAs:["ngModel"]},{type:taiga_ui_kit_components_select.OI,selector:"tui-select"},{type:taiga_ui_core_directives_textfield_controller.sz,selector:"[tuiTextfieldSize]",inputs:["tuiTextfieldSize"]},{type:taiga_ui_core_components_data_list.gX,selector:"ng-template[tuiDataList]"},{type:taiga_ui_kit_components_input_files.Kr,selector:"input[tuiInputFiles]"},{type:Canvas2dDirective,selector:"canvas[waCanvas2d]"},{type:DrawImageDirective,selector:"canvas-draw-image",inputs:["image","dX","dY","dWidth","dHeight","sX","sY","sWidth","sHeight"]},{type:PathDirective,selector:"canvas-path:not([path])",inputs:["closed","fillRule"]},{type:FillStrokeStylesDirective,selector:"canvas-path[fillStyle],canvas-path[strokeStyle],canvas-text[fillStyle],canvas-text[strokeStyle]",inputs:["fillStyle","strokeStyle"]},{type:RectDirective,selector:"canvas-rect",inputs:["x","y","width","height"]},{type:CompositingDirective,selector:"canvas-draw-image[globalAlpha],canvas-draw-image[globalCompositeOperation],canvas-path[globalAlpha],canvas-path[globalCompositeOperation],canvas-text[globalAlpha],canvas-text[globalCompositeOperation]",inputs:["globalAlpha","globalCompositeOperation"]},{type:taiga_ui_kit_components_input.wU,selector:"tui-input"},{type:TransformDirective,selector:"canvas[transform],canvas-draw-image[transform],canvas-path[transform],canvas-text[transform]",inputs:["transform"]},{type:ShadowStylesDirective,selector:"canvas-draw-image[shadowBlur],canvas-draw-image[shadowColor],canvas-draw-image[shadowOffsetX],canvas-draw-image[shadowOffsetY],canvas-path[shadowBlur],canvas-path[shadowColor],canvas-path[shadowOffsetX],canvas-path[shadowOffsetY],canvas-text[shadowBlur],canvas-text[shadowColor],canvas-text[shadowOffsetX],canvas-text[shadowOffsetY]",inputs:["shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY"]},{type:ArcDirective,selector:"canvas-arc",inputs:["x","y","radius","startAngle","endAngle","anticlockwise"]},{type:LineToDirective,selector:"canvas-line-to",inputs:["x","y"]},{type:TextDirective,selector:"canvas-text",inputs:["text","x","y","maxWidth"]},{type:TextDrawingStylesDirective,selector:"canvas-text[direction],canvas-text[font],canvas-text[textAlign],canvas-text[textBaseline]",inputs:["direction","font","textAlign","textBaseline"]}],pipes:{transform:TransformPipe,rad:RadPipe},changeDetection:core.ChangeDetectionStrategy.OnPush}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasPageComponent,decorators:[{type:core.Component,args:[{selector:"audio-page",templateUrl:"./canvas-page.component.html",styleUrls:["./canvas-page.component.css"],changeDetection:core.ChangeDetectionStrategy.OnPush}]}],ctorParameters:function(){return[]}});var router=__webpack_require__(3984),common=__webpack_require__(12057);class ClipPathComponent{constructor(){this.pathSteps=new core.QueryList}}__name(ClipPathComponent,"ClipPathComponent"),ClipPathComponent.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ClipPathComponent,deps:[],target:core.\u0275\u0275FactoryTarget.Component}),ClipPathComponent.\u0275cmp=core.\u0275\u0275ngDeclareComponent({minVersion:"12.0.0",version:"12.2.15",type:ClipPathComponent,selector:"canvas-clip-path",queries:[{propertyName:"pathSteps",predicate:CANVAS_METHOD}],ngImport:core,template:"<ng-content></ng-content>",isInline:!0}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ClipPathComponent,decorators:[{type:core.Component,args:[{selector:"canvas-clip-path",template:"<ng-content></ng-content>"}]}],propDecorators:{pathSteps:[{type:core.ContentChildren,args:[CANVAS_METHOD]}]}});class Path2dDirective{constructor(method){this.path=new Path2D,method.call=context=>{context.fill(this.path,this.fillRule),context.stroke(this.path)}}}__name(Path2dDirective,"Path2dDirective"),Path2dDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:Path2dDirective,deps:[{token:DrawService}],target:core.\u0275\u0275FactoryTarget.Directive}),Path2dDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:Path2dDirective,selector:"canvas-path[path]",inputs:{path:"path",fillRule:"fillRule"},providers:[DrawService],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:Path2dDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-path[path]",providers:[DrawService]}]}],ctorParameters:function(){return[{type:void 0,decorators:[{type:core.Inject,args:[DrawService]}]}]},propDecorators:{path:[{type:core.Input}],fillRule:[{type:core.Input}]}});class ArcToDirective{constructor(){this.x1=0,this.y1=0,this.x2=0,this.y2=0,this.radius=0}call(context){context.arcTo(this.x1,this.y1,this.x2,this.y2,this.radius)}}__name(ArcToDirective,"ArcToDirective"),ArcToDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ArcToDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),ArcToDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:ArcToDirective,selector:"canvas-arc-to",inputs:{x1:"x1",y1:"y1",x2:"x2",y2:"y2",radius:"radius"},providers:[asCanvasMethod(ArcToDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ArcToDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-arc-to",providers:[asCanvasMethod(ArcToDirective)]}]}],propDecorators:{x1:[{type:core.Input}],y1:[{type:core.Input}],x2:[{type:core.Input}],y2:[{type:core.Input}],radius:[{type:core.Input}]}});class BezierCurveToDirective{constructor(){this.cp1x=0,this.cp1y=0,this.cp2x=0,this.cp2y=0,this.x=0,this.y=0}call(context){context.bezierCurveTo(this.cp1x,this.cp1y,this.cp2x,this.cp2y,this.x,this.y)}}__name(BezierCurveToDirective,"BezierCurveToDirective"),BezierCurveToDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:BezierCurveToDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),BezierCurveToDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:BezierCurveToDirective,selector:"canvas-bezier-curve-to",inputs:{cp1x:"cp1x",cp1y:"cp1y",cp2x:"cp2x",cp2y:"cp2y",x:"x",y:"y"},providers:[asCanvasMethod(BezierCurveToDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:BezierCurveToDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-bezier-curve-to",providers:[asCanvasMethod(BezierCurveToDirective)]}]}],propDecorators:{cp1x:[{type:core.Input}],cp1y:[{type:core.Input}],cp2x:[{type:core.Input}],cp2y:[{type:core.Input}],x:[{type:core.Input}],y:[{type:core.Input}]}});class EllipseDirective{constructor(){this.x=0,this.y=0,this.radiusX=0,this.radiusY=0,this.rotation=0,this.startAngle=0,this.endAngle=0,this.anticlockwise=!1}call(context){context.ellipse(this.x,this.y,this.radiusX,this.radiusY,this.rotation,this.startAngle,this.endAngle,this.anticlockwise)}}__name(EllipseDirective,"EllipseDirective"),EllipseDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:EllipseDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),EllipseDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:EllipseDirective,selector:"canvas-ellipse",inputs:{x:"x",y:"y",radiusX:"radiusX",radiusY:"radiusY",rotation:"rotation",startAngle:"startAngle",endAngle:"endAngle",anticlockwise:"anticlockwise"},providers:[asCanvasMethod(EllipseDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:EllipseDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-ellipse",providers:[asCanvasMethod(EllipseDirective)]}]}],propDecorators:{x:[{type:core.Input}],y:[{type:core.Input}],radiusX:[{type:core.Input}],radiusY:[{type:core.Input}],rotation:[{type:core.Input}],startAngle:[{type:core.Input}],endAngle:[{type:core.Input}],anticlockwise:[{type:core.Input}]}});class MoveToDirective{constructor(){this.x=0,this.y=0}call(context){context.moveTo(this.x,this.y)}}__name(MoveToDirective,"MoveToDirective"),MoveToDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:MoveToDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),MoveToDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:MoveToDirective,selector:"canvas-move-to",inputs:{x:"x",y:"y"},providers:[asCanvasMethod(MoveToDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:MoveToDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-move-to",providers:[asCanvasMethod(MoveToDirective)]}]}],propDecorators:{x:[{type:core.Input}],y:[{type:core.Input}]}});class QuadraticCurveToDirective{constructor(){this.cpx=0,this.cpy=0,this.x=0,this.y=0}call(context){context.quadraticCurveTo(this.cpx,this.cpy,this.x,this.y)}}__name(QuadraticCurveToDirective,"QuadraticCurveToDirective"),QuadraticCurveToDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:QuadraticCurveToDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),QuadraticCurveToDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:QuadraticCurveToDirective,selector:"canvas-quadratic-curve-to",inputs:{cpx:"cpx",cpy:"cpy",x:"x",y:"y"},providers:[asCanvasMethod(QuadraticCurveToDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:QuadraticCurveToDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-quadratic-curve-to",providers:[asCanvasMethod(QuadraticCurveToDirective)]}]}],propDecorators:{cpx:[{type:core.Input}],cpy:[{type:core.Input}],x:[{type:core.Input}],y:[{type:core.Input}]}});class GradientPipe{constructor(context){this.context=context}transform(stops,a1,a2,a3,a4,a5,a6){const gradient=void 0!==a5&&void 0!==a6?this.context.createRadialGradient(a1,a2,a3,a4,a5,a6):this.context.createLinearGradient(a1,a2,a3,a4);for(const stop of stops.keys())gradient.addColorStop(stop,stops.get(stop)||"");return gradient}}__name(GradientPipe,"GradientPipe"),GradientPipe.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GradientPipe,deps:[{token:CANVAS_2D_CONTEXT}],target:core.\u0275\u0275FactoryTarget.Pipe}),GradientPipe.\u0275pipe=core.\u0275\u0275ngDeclarePipe({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GradientPipe,name:"gradient"}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:GradientPipe,decorators:[{type:core.Pipe,args:[{name:"gradient"}]}],ctorParameters:function(){return[{type:CanvasRenderingContext2D,decorators:[{type:core.Inject,args:[CANVAS_2D_CONTEXT]}]}]}});class PathPipe{transform(path){return new Path2D(path)}}__name(PathPipe,"PathPipe"),PathPipe.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PathPipe,deps:[],target:core.\u0275\u0275FactoryTarget.Pipe}),PathPipe.\u0275pipe=core.\u0275\u0275ngDeclarePipe({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PathPipe,name:"path"}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PathPipe,decorators:[{type:core.Pipe,args:[{name:"path"}]}]});class PatternPipe{constructor(context){this.context=context}transform(image,repetition="repeat"){return this.context.createPattern(image,repetition)}}__name(PatternPipe,"PatternPipe"),PatternPipe.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PatternPipe,deps:[{token:CANVAS_2D_CONTEXT}],target:core.\u0275\u0275FactoryTarget.Pipe}),PatternPipe.\u0275pipe=core.\u0275\u0275ngDeclarePipe({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PatternPipe,name:"pattern"}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PatternPipe,decorators:[{type:core.Pipe,args:[{name:"pattern"}]}],ctorParameters:function(){return[{type:CanvasRenderingContext2D,decorators:[{type:core.Inject,args:[CANVAS_2D_CONTEXT]}]}]}});class FilterDirective{constructor(){this.filter="none"}call(context){context.filter=this.filter}}__name(FilterDirective,"FilterDirective"),FilterDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:FilterDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),FilterDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:FilterDirective,selector:"canvas-draw-image[filter],canvas-path[filter],canvas-text[filter]",inputs:{filter:"filter"},providers:[asCanvasProperty(FilterDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:FilterDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-draw-image[filter],canvas-path[filter],canvas-text[filter]",providers:[asCanvasProperty(FilterDirective)]}]}],propDecorators:{filter:[{type:core.Input}]}});class ClipDirective{constructor(){this.clip=new Path2D}call(context){this.clip instanceof ClipPathComponent?(context.beginPath(),this.clip.pathSteps.forEach(step=>{step.call(context)}),context.clip(this.clipFillRule)):context.clip(this.clip,this.clipFillRule)}}__name(ClipDirective,"ClipDirective"),ClipDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ClipDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),ClipDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:ClipDirective,selector:"canvas-draw-image[clip],canvas-draw-image[clipFillRule],canvas-path[clip],canvas-path[clipFillRule],canvas-text[clip],canvas-text[clipFillRule]",inputs:{clip:"clip",clipFillRule:"clipFillRule"},providers:[asCanvasProperty(ClipDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ClipDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-draw-image[clip],canvas-draw-image[clipFillRule],canvas-path[clip],canvas-path[clipFillRule],canvas-text[clip],canvas-text[clipFillRule]",providers:[asCanvasProperty(ClipDirective)]}]}],propDecorators:{clip:[{type:core.Input}],clipFillRule:[{type:core.Input}]}});class ImageSmoothingDirective{constructor(){this.imageSmoothingEnabled=!0,this.imageSmoothingQuality="low"}call(context){context.imageSmoothingEnabled=this.imageSmoothingEnabled,context.imageSmoothingQuality=this.imageSmoothingQuality}}__name(ImageSmoothingDirective,"ImageSmoothingDirective"),ImageSmoothingDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ImageSmoothingDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),ImageSmoothingDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:ImageSmoothingDirective,selector:"canvas-draw-image[imageSmoothingEnabled],canvas-draw-image[imageSmoothingQuality],canvas-path[imageSmoothingEnabled],canvas-path[imageSmoothingQuality],canvas-text[imageSmoothingEnabled],canvas-text[imageSmoothingQuality]",inputs:{imageSmoothingEnabled:"imageSmoothingEnabled",imageSmoothingQuality:"imageSmoothingQuality"},providers:[asCanvasProperty(ImageSmoothingDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:ImageSmoothingDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-draw-image[imageSmoothingEnabled],canvas-draw-image[imageSmoothingQuality],canvas-path[imageSmoothingEnabled],canvas-path[imageSmoothingQuality],canvas-text[imageSmoothingEnabled],canvas-text[imageSmoothingQuality]",providers:[asCanvasProperty(ImageSmoothingDirective)]}]}],propDecorators:{imageSmoothingEnabled:[{type:core.Input}],imageSmoothingQuality:[{type:core.Input}]}});class PathDrawingStylesDirective{constructor(){this.lineCap="butt",this.lineDashOffset=0,this.lineJoin="miter",this.lineWidth=1,this.lineDash=[],this.miterLimit=10}call(context){context.lineCap=this.lineCap,context.lineDashOffset=this.lineDashOffset,context.lineJoin=this.lineJoin,context.lineWidth=this.lineWidth,context.miterLimit=this.miterLimit,context.setLineDash(this.lineDash)}}__name(PathDrawingStylesDirective,"PathDrawingStylesDirective"),PathDrawingStylesDirective.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PathDrawingStylesDirective,deps:[],target:core.\u0275\u0275FactoryTarget.Directive}),PathDrawingStylesDirective.\u0275dir=core.\u0275\u0275ngDeclareDirective({minVersion:"12.0.0",version:"12.2.15",type:PathDrawingStylesDirective,selector:"canvas-path[lineCap],canvas-path[lineDashOffset],canvas-path[lineJoin],canvas-path[lineWidth],canvas-path[lineDash],canvas-path[miterLimit],canvas-text[lineCap],canvas-text[lineDashOffset],canvas-text[lineJoin],canvas-text[lineWidth],canvas-text[lineDash],canvas-text[miterLimit]",inputs:{lineCap:"lineCap",lineDashOffset:"lineDashOffset",lineJoin:"lineJoin",lineWidth:"lineWidth",lineDash:"lineDash",miterLimit:"miterLimit"},providers:[asCanvasProperty(PathDrawingStylesDirective)],ngImport:core}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:PathDrawingStylesDirective,decorators:[{type:core.Directive,args:[{selector:"canvas-path[lineCap],canvas-path[lineDashOffset],canvas-path[lineJoin],canvas-path[lineWidth],canvas-path[lineDash],canvas-path[miterLimit],canvas-text[lineCap],canvas-text[lineDashOffset],canvas-text[lineJoin],canvas-text[lineWidth],canvas-text[lineDash],canvas-text[miterLimit]",providers:[asCanvasProperty(PathDrawingStylesDirective)]}]}],propDecorators:{lineCap:[{type:core.Input}],lineDashOffset:[{type:core.Input}],lineJoin:[{type:core.Input}],lineWidth:[{type:core.Input}],lineDash:[{type:core.Input}],miterLimit:[{type:core.Input}]}});class CanvasModule{}__name(CanvasModule,"CanvasModule"),CanvasModule.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasModule,deps:[],target:core.\u0275\u0275FactoryTarget.NgModule}),CanvasModule.\u0275mod=core.\u0275\u0275ngDeclareNgModule({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasModule,declarations:[Canvas2dDirective,ClipPathComponent,DrawImageDirective,PathDirective,Path2dDirective,TextDirective,ArcDirective,ArcToDirective,BezierCurveToDirective,EllipseDirective,LineToDirective,MoveToDirective,QuadraticCurveToDirective,RectDirective,ClipDirective,CompositingDirective,FillStrokeStylesDirective,FilterDirective,ImageSmoothingDirective,PathDrawingStylesDirective,ShadowStylesDirective,TextDrawingStylesDirective,TransformDirective,GradientPipe,PathPipe,PatternPipe,RadPipe,TransformPipe],exports:[Canvas2dDirective,ClipPathComponent,DrawImageDirective,PathDirective,Path2dDirective,TextDirective,ArcDirective,ArcToDirective,BezierCurveToDirective,EllipseDirective,LineToDirective,MoveToDirective,QuadraticCurveToDirective,RectDirective,ClipDirective,CompositingDirective,FillStrokeStylesDirective,FilterDirective,ImageSmoothingDirective,PathDrawingStylesDirective,ShadowStylesDirective,TextDrawingStylesDirective,GradientPipe,PathPipe,PatternPipe,RadPipe,TransformDirective,TransformPipe]}),CanvasModule.\u0275inj=core.\u0275\u0275ngDeclareInjector({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasModule}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasModule,decorators:[{type:core.NgModule,args:[{declarations:[Canvas2dDirective,ClipPathComponent,DrawImageDirective,PathDirective,Path2dDirective,TextDirective,ArcDirective,ArcToDirective,BezierCurveToDirective,EllipseDirective,LineToDirective,MoveToDirective,QuadraticCurveToDirective,RectDirective,ClipDirective,CompositingDirective,FillStrokeStylesDirective,FilterDirective,ImageSmoothingDirective,PathDrawingStylesDirective,ShadowStylesDirective,TextDrawingStylesDirective,TransformDirective,GradientPipe,PathPipe,PatternPipe,RadPipe,TransformPipe],exports:[Canvas2dDirective,ClipPathComponent,DrawImageDirective,PathDirective,Path2dDirective,TextDirective,ArcDirective,ArcToDirective,BezierCurveToDirective,EllipseDirective,LineToDirective,MoveToDirective,QuadraticCurveToDirective,RectDirective,ClipDirective,CompositingDirective,FillStrokeStylesDirective,FilterDirective,ImageSmoothingDirective,PathDrawingStylesDirective,ShadowStylesDirective,TextDrawingStylesDirective,GradientPipe,PathPipe,PatternPipe,RadPipe,TransformDirective,TransformPipe]}]}]});class CanvasPageModule{}__name(CanvasPageModule,"CanvasPageModule"),CanvasPageModule.\u0275fac=core.\u0275\u0275ngDeclareFactory({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasPageModule,deps:[],target:core.\u0275\u0275FactoryTarget.NgModule}),CanvasPageModule.\u0275mod=core.\u0275\u0275ngDeclareNgModule({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasPageModule,declarations:[CanvasPageComponent],imports:[common.ez,fesm2015_forms.u5,CanvasModule,taiga_ui_kit_components_input_files.G0,taiga_ui_core_components_label.U,taiga_ui_kit_components_slider.c2,taiga_ui_core_components_expand.ij,taiga_ui_kit_components_select.Jy,taiga_ui_kit_components_data_list_wrapper.zX,taiga_ui_core_directives_textfield_controller.cn,taiga_ui_addon_editor_components_input_color.S,taiga_ui_kit_components_input.Qf,router.Bz]}),CanvasPageModule.\u0275inj=core.\u0275\u0275ngDeclareInjector({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasPageModule,imports:[[common.ez,fesm2015_forms.u5,CanvasModule,taiga_ui_kit_components_input_files.G0,taiga_ui_core_components_label.U,taiga_ui_kit_components_slider.c2,taiga_ui_core_components_expand.ij,taiga_ui_kit_components_select.Jy,taiga_ui_kit_components_data_list_wrapper.zX,taiga_ui_core_directives_textfield_controller.cn,taiga_ui_addon_editor_components_input_color.S,taiga_ui_kit_components_input.Qf,router.Bz.forChild([{path:"",component:CanvasPageComponent}])]]}),core.\u0275\u0275ngDeclareClassMetadata({minVersion:"12.0.0",version:"12.2.15",ngImport:core,type:CanvasPageModule,decorators:[{type:core.NgModule,args:[{imports:[common.ez,fesm2015_forms.u5,CanvasModule,taiga_ui_kit_components_input_files.G0,taiga_ui_core_components_label.U,taiga_ui_kit_components_slider.c2,taiga_ui_core_components_expand.ij,taiga_ui_kit_components_select.Jy,taiga_ui_kit_components_data_list_wrapper.zX,taiga_ui_core_directives_textfield_controller.cn,taiga_ui_addon_editor_components_input_color.S,taiga_ui_kit_components_input.Qf,router.Bz.forChild([{path:"",component:CanvasPageComponent}])],declarations:[CanvasPageComponent]}]}]})}};