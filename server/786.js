"use strict";exports.id=786,exports.ids=[786],exports.modules={89786:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>screen_orientation_page_component});var common=__webpack_require__(4594),core=__webpack_require__(35548),src=__webpack_require__(88108),Observable=__webpack_require__(25948),fromEvent=__webpack_require__(59359),startWith=__webpack_require__(905),map=__webpack_require__(51160),shareReplay=__webpack_require__(59582);let ScreenOrientationService=(()=>{var _ScreenOrientationService;class ScreenOrientationService2 extends Observable.y{constructor(){super(subscriber=>this.stream$.subscribe(subscriber)),this.win=(0,core.f3M)(src.m9),this.stream$=(this.isModern?(0,fromEvent.R)(this.win.screen.orientation,"change").pipe((0,startWith.O)(null),(0,map.U)(()=>this.win.screen.orientation.type)):(0,fromEvent.R)(this.win,"orientationchange").pipe((0,startWith.O)(null),(0,map.U)(()=>{switch(parseInt(this.win.orientation,10)){case 0:return"portrait-primary";case 180:return"portrait-secondary";case 90:return"landscape-primary";case-90:return"landscape-secondary"}}))).pipe((0,shareReplay.d)({bufferSize:1,refCount:!0}))}get isModern(){var _a,_b;return!(null==(_b=null==(_a=this.win)?void 0:_a.screen)||!_b.orientation)}}return(_ScreenOrientationService=ScreenOrientationService2).\u0275fac=function(t){return new(t||_ScreenOrientationService)},_ScreenOrientationService.\u0275prov=core.Yz7({token:_ScreenOrientationService,factory:_ScreenOrientationService.\u0275fac,providedIn:"root"}),ScreenOrientationService2})();var ngx_highlightjs=__webpack_require__(27670);const screen_orientation_page_component=(()=>{var _ScreenOrientationPageComponent;class ScreenOrientationPageComponent2{constructor(){this.orientation$=(0,core.f3M)(ScreenOrientationService),this.sample="import {ScreenOrientationService} from '@ng-web-apis/screen-orientation';\n\n// ...\nexport class MyComponent {\n  constructor(readonly orientation$: ScreenOrientationService) {}\n}",this.sampleHtml="<p>{{ orientation$ | async }}</p>"}}return(_ScreenOrientationPageComponent=ScreenOrientationPageComponent2).\u0275fac=function(t){return new(t||_ScreenOrientationPageComponent)},_ScreenOrientationPageComponent.\u0275cmp=core.Xpm({type:_ScreenOrientationPageComponent,selectors:[["screen-orientation-page"]],standalone:!0,features:[core.jDz],decls:31,vars:5,consts:[[3,"highlight"]],template:function(rf,ctx){1&rf&&(core.TgZ(0,"p")(1,"b"),core._uU(2,"Current type:\xa0"),core.qZA(),core.TgZ(3,"code"),core._uU(4),core.ALo(5,"async"),core.qZA()(),core._UZ(6,"hr")(7,"br"),core.TgZ(8,"h2"),core._uU(9,"How to use"),core.qZA(),core.TgZ(10,"pre"),core._UZ(11,"code",0),core.qZA(),core.TgZ(12,"pre"),core._UZ(13,"code",0),core.qZA(),core._UZ(14,"hr"),core.TgZ(15,"p")(16,"b"),core._uU(17,"Landscape-primary"),core.qZA(),core._uU(18," is an orientation where the screen width is greater than the screen height. If the device's natural orientation is landscape, then it is in landscape-primary when held in that position. If the device's natural orientation is portrait, the user agent sets landscape-primary from the two options as shown in the screen orientation values table.\n"),core.qZA(),core.TgZ(19,"p")(20,"b"),core._uU(21,"Landscape-secondary"),core.qZA(),core._uU(22," is an orientation where the screen width is greater than the screen height. If the device's natural orientation is landscape, it is in landscape-secondary when rotated 180\xba from its natural orientation. If the device's natural orientation is portrait, the user agent sets landscape-secondary from the two options as shown in the screen orientation values table.\n"),core.qZA(),core.TgZ(23,"p")(24,"b"),core._uU(25,"Portrait-primary"),core.qZA(),core._uU(26," is an orientation where the screen width is less than or equal to the screen height. If the device's natural orientation is portrait, then it is in portrait-primary when held in that position. If the device's natural orientation is landscape, the user agent sets portrait-primary from the two options as shown in the screen orientation values table.\n"),core.qZA(),core.TgZ(27,"p")(28,"b"),core._uU(29,"Portrait-secondary"),core.qZA(),core._uU(30," is an orientation where the screen width is less than or equal to the screen height. If the device's natural orientation is portrait, then it is in portrait-secondary when rotated 180\xba from its natural position. If the device's natural orientation is landscape, the user agent sets portrait-secondary from the two options as shown in the screen orientation values table.\n"),core.qZA()),2&rf&&(core.xp6(4),core.Oqu(core.lcZ(5,3,ctx.orientation$)),core.xp6(7),core.Q6J("highlight",ctx.sample),core.xp6(2),core.Q6J("highlight",ctx.sampleHtml))},dependencies:[common.ez,common.Ov,ngx_highlightjs._l,ngx_highlightjs.y$],styles:["[_nghost-%COMP%]{display:block;max-width:700px;margin:0 auto;line-height:1.5;font-size:1.1em}button[_ngcontent-%COMP%]{margin:0 auto;display:block}iframe[_ngcontent-%COMP%]{width:100%;height:20rem}"],changeDetection:0}),ScreenOrientationPageComponent2})()}};