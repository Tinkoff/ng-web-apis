"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[860],{90860:(U,p,a)=>{a.r(p),a.d(p,{StoragePageModule:()=>Z});var t=a(64537),s=a(35673),r=a(73930);let y=(()=>{class n{constructor(e,o){this.localStorage=e,this.windowRef=o}get length(){return this.localStorage.length}getItem(e){return this.localStorage.getItem(e)}setItem(e,o){const i=this.getItem(e);this.localStorage.setItem(e,o),this.notify(e,o,i)}removeItem(e){const o=this.getItem(e);this.localStorage.removeItem(e),this.notify(e,null,o)}clear(){this.localStorage.clear(),this.notify(null,null,null)}key(e){return this.localStorage.key(e)}notify(e,o,i){const u=new StorageEvent("storage",{key:e,newValue:o,oldValue:i,storageArea:this.localStorage,url:this.windowRef.location.href});this.windowRef.dispatchEvent(u)}static{this.\u0275fac=function(o){return new(o||n)(t.LFG(r.H3),t.LFG(r.m9))}}static{this.\u0275prov=t.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"})}}return n})();var T=a(14581);const E=new t.OlP("All changes to Storage objects",{factory:()=>(0,T.R)((0,t.f3M)(r.m9),"storage")});var C=a(74970),w=a(27969),l=a(69900),c=a(21673),h=a(60885),m=a(95974),v=a(88692);let M=(()=>{class n{constructor(e,o,i){this.event$=e,this.storage=o,this.storageService=i,this.value$=this.event$.pipe(function A(n){return(0,C.h)(({key:d})=>null===d||d===n)}("value"),function x(){return(0,w.U)(({newValue:n})=>n)}()),this.native="",this.service="",this.index=0}withStorage(e){this.storage.setItem("value",e),this.native=e}withService(e){this.storageService.setItem("value",e),this.service=e}static{this.\u0275fac=function(o){return new(o||n)(t.Y36(E),t.Y36(r.H3),t.Y36(y))}}static{this.\u0275cmp=t.Xpm({type:n,selectors:[["example"]],decls:16,vars:5,consts:[["tuiGroup",""],[3,"ngModel","ngModelChange"]],template:function(o,i){1&o&&(t.TgZ(0,"h3"),t._uU(1," Value from "),t.TgZ(2,"code"),t._uU(3,"STORAGE_EVENT"),t.qZA(),t._uU(4),t.ALo(5,"async"),t.qZA(),t.TgZ(6,"p",0)(7,"tui-input",1),t.NdJ("ngModelChange",function(g){return i.withStorage(g)}),t._uU(8," Native update "),t.qZA(),t.TgZ(9,"tui-input",1),t.NdJ("ngModelChange",function(g){return i.withService(g)}),t._uU(10," With service "),t.qZA()(),t.TgZ(11,"tui-notification"),t._uU(12," Native event is only triggered with update happens in another tab. Try opening this page in another tab and type into the first input. Use "),t.TgZ(13,"code"),t._uU(14,"StorageService"),t.qZA(),t._uU(15," if you need to know about changes in the same tab too.\n"),t.qZA()),2&o&&(t.xp6(4),t.hij(" : ",t.lcZ(5,3,i.value$),"\n"),t.xp6(3),t.Q6J("ngModel",i.native),t.xp6(2),t.Q6J("ngModel",i.service))},dependencies:[l.JJ,l.On,c.K3,c.wU,h.L,m.gZ,v.Ov],encapsulation:2})}}return n})(),O=(()=>{class n{constructor(){this.example={TypeScript:"import {Component, Inject} from '@angular/core';\nimport {LOCAL_STORAGE} from '@ng-web-apis/common';\nimport {filterByKey, STORAGE_EVENT, StorageService, toValue} from '@ng-web-apis/storage';\nimport {Observable} from 'rxjs';\n\n@Component({\n    selector: 'example',\n    templateUrl: './example.template.html',\n})\nexport class ExampleComponent {\n    readonly value$ = this.event$.pipe(filterByKey('value'), toValue());\n\n    native = '';\n\n    service = '';\n\n    index = 0;\n\n    constructor(\n        @Inject(STORAGE_EVENT) private readonly event$: Observable<StorageEvent>,\n        @Inject(LOCAL_STORAGE) private readonly storage: Storage,\n        @Inject(StorageService) private readonly storageService: Storage,\n    ) {}\n\n    withStorage(value: string) {\n        this.storage.setItem('value', value);\n        this.native = value;\n    }\n\n    withService(value: string) {\n        this.storageService.setItem('value', value);\n        this.service = value;\n    }\n}\n",HTML:'<h3>\n    Value from\n    <code>STORAGE_EVENT</code>\n    : {{ value$ | async }}\n</h3>\n<p tuiGroup>\n    <tui-input\n        [ngModel]="native"\n        (ngModelChange)="withStorage($event)"\n    >\n        Native update\n    </tui-input>\n    <tui-input\n        [ngModel]="service"\n        (ngModelChange)="withService($event)"\n    >\n        With service\n    </tui-input>\n</p>\n<tui-notification>\n    Native event is only triggered with update happens in another tab. Try opening this page in another tab and type\n    into the first input. Use\n    <code>StorageService</code>\n    if you need to know about changes in the same tab too.\n</tui-notification>\n'}}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=t.Xpm({type:n,selectors:[["common-page"]],decls:2,vars:1,consts:[[3,"content"]],template:function(o,i){1&o&&(t.TgZ(0,"tui-doc-example",0),t._UZ(1,"example"),t.qZA()),2&o&&t.Q6J("content",i.example)},dependencies:[s.f2,M],styles:["[_nghost-%COMP%]{display:block;max-width:600px;margin:0 auto}tui-doc-example[_ngcontent-%COMP%]{padding:0}"],changeDetection:0})}}return n})();var I=a(22864);let Z=(()=>{class n{static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275mod=t.oAB({type:n})}static{this.\u0275inj=t.cJS({imports:[v.ez,l.u5,c.Qf,h.H,m.n6,s.u4,s.qn,I.Bz.forChild([{path:"",component:O}])]})}}return n})()}}]);