"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[230],{22230:(A,s,n)=>{n.r(s),n.d(s,{ScreenOrientationPageModule:()=>w});var t=n(64537),m=n(73930),g=n(87241),o=n(14581),h=n(51927),c=n(27969),f=n(66466);let y=(()=>{class e extends g.y{constructor(a){super(i=>this.stream$.subscribe(i)),this.win=a,this.stream$=(this.isModern?(0,o.R)(this.win.screen.orientation,"change").pipe((0,h.O)(null),(0,c.U)(()=>this.win.screen.orientation.type)):(0,o.R)(this.win,"orientationchange").pipe((0,h.O)(null),(0,c.U)(()=>{switch(parseInt(this.win.orientation,10)){case 0:return"portrait-primary";case 180:return"portrait-secondary";case 90:return"landscape-primary";case-90:return"landscape-secondary"}}))).pipe((0,f.d)({bufferSize:1,refCount:!0}))}get isModern(){return!!this.win?.screen?.orientation}static{this.\u0275fac=function(i){return new(i||e)(t.LFG(m.m9))}}static{this.\u0275prov=t.Yz7({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();var l=n(16098),p=n(88692);let v=(()=>{class e{constructor(a){this.orientation$=a,this.sample="import {ScreenOrientationService} from '@ng-web-apis/screen-orientation';\n\n// ...\nexport class MyComponent {\n  constructor(readonly orientation$: ScreenOrientationService) {}\n}",this.sampleHtml="<p>{{ orientation$ | async }}</p>"}static{this.\u0275fac=function(i){return new(i||e)(t.Y36(y))}}static{this.\u0275cmp=t.Xpm({type:e,selectors:[["screen-orientation-page"]],decls:31,vars:5,consts:[[3,"highlight"]],template:function(i,r){1&i&&(t.TgZ(0,"p")(1,"b"),t._uU(2,"Current type:\xa0"),t.qZA(),t.TgZ(3,"code"),t._uU(4),t.ALo(5,"async"),t.qZA()(),t._UZ(6,"hr")(7,"br"),t.TgZ(8,"h2"),t._uU(9,"How to use"),t.qZA(),t.TgZ(10,"pre"),t._UZ(11,"code",0),t.qZA(),t.TgZ(12,"pre"),t._UZ(13,"code",0),t.qZA(),t._UZ(14,"hr"),t.TgZ(15,"p")(16,"b"),t._uU(17,"Landscape-primary"),t.qZA(),t._uU(18," is an orientation where the screen width is greater than the screen height. If the device's natural orientation is landscape, then it is in landscape-primary when held in that position. If the device's natural orientation is portrait, the user agent sets landscape-primary from the two options as shown in the screen orientation values table.\n"),t.qZA(),t.TgZ(19,"p")(20,"b"),t._uU(21,"Landscape-secondary"),t.qZA(),t._uU(22," is an orientation where the screen width is greater than the screen height. If the device's natural orientation is landscape, it is in landscape-secondary when rotated 180\xba from its natural orientation. If the device's natural orientation is portrait, the user agent sets landscape-secondary from the two options as shown in the screen orientation values table.\n"),t.qZA(),t.TgZ(23,"p")(24,"b"),t._uU(25,"Portrait-primary"),t.qZA(),t._uU(26," is an orientation where the screen width is less than or equal to the screen height. If the device's natural orientation is portrait, then it is in portrait-primary when held in that position. If the device's natural orientation is landscape, the user agent sets portrait-primary from the two options as shown in the screen orientation values table.\n"),t.qZA(),t.TgZ(27,"p")(28,"b"),t._uU(29,"Portrait-secondary"),t.qZA(),t._uU(30," is an orientation where the screen width is less than or equal to the screen height. If the device's natural orientation is portrait, then it is in portrait-secondary when rotated 180\xba from its natural position. If the device's natural orientation is landscape, the user agent sets portrait-secondary from the two options as shown in the screen orientation values table.\n"),t.qZA()),2&i&&(t.xp6(4),t.Oqu(t.lcZ(5,3,r.orientation$)),t.xp6(7),t.Q6J("highlight",r.sample),t.xp6(2),t.Q6J("highlight",r.sampleHtml))},dependencies:[l.y$,p.Ov],styles:["[_nghost-%COMP%]{display:block;max-width:700px;margin:0 auto;line-height:1.5;font-size:1.1em}button[_ngcontent-%COMP%]{margin:0 auto;display:block}iframe[_ngcontent-%COMP%]{width:100%;height:20rem}"],changeDetection:0})}}return e})();var Z=n(22864);let w=(()=>{class e{static{this.\u0275fac=function(i){return new(i||e)}}static{this.\u0275mod=t.oAB({type:e})}static{this.\u0275inj=t.cJS({imports:[p.ez,l._l,Z.Bz.forChild([{path:"",component:v}])]})}}return e})()}}]);